"""
Django settings for django_todo_project project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import logging
from dotenv import load_dotenv

# Load environment variables from .env file
env_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), '.env')
load_dotenv(env_path)

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

SECRET_KEY = 'django-insecure-your-very-secret-key-here-change-me' 

DEBUG = os.environ.get('DJANGO_DEBUG', 'False').lower() == 'true' # Set to False in production via env var

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
    'ai-powered-to-do-application.onrender.com', # Your Render app's domain
]
# For Render, it's also good to add the hostname it provides:
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'todo_app.apps.TodoAppConfig',       # Use AppConfig to trigger scheduler
    'django_apscheduler', # For background tasks
    'corsheaders',  # Enable CORS for Next.js frontend
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Must be high in order
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_todo_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'todo_app/templates')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_todo_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'smart_todo_db',        # Replace with your PostgreSQL database name
        'USER': 'postgres',        # Replace with your PostgreSQL username
        'PASSWORD': 'postgres',  # Replace with your PostgreSQL password
        'HOST': '127.0.0.1',             # Or your DB host
        'PORT': '5432',                  # Or your DB port
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC' 

USE_I18N = True

USE_TZ = True 


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'todo_app/static'), 
]
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_collected') # For production


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# APScheduler settings
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"  # Default format
APSCHEDULER_RUN_NOW_TIMEOUT = 25  # Seconds

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose', 
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG', 
    },
    'loggers': {
        'django': { 
            'handlers': ['console'],
            'level': 'INFO', 
            'propagate': False,
        },
        'django.db.backends': { 
            'handlers': ['console'],
            'level': 'DEBUG', 
            'propagate': False,
        },
        'django_apscheduler': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'todo_app': { 
            'handlers': ['console'],
            'level': 'DEBUG', 
            'propagate': False, 
        },
    },
}

# CORS settings for Next.js frontend
CORS_ALLOW_ALL_ORIGINS = True

# Frontend URL for redirecting root endpoint
FRONTEND_URL = os.environ.get('FRONTEND_URL', 'http://localhost:3002')